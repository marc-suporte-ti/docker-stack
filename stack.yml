version: '3.9'

services:

  nginx_edge_service:
    image: nginx_edge_service:latest
    hostname: nginx_edge_service
    build: 
      context: ./nginx_edge_service
      dockerfile: Dockerfile
    networks:
      - lb-edge
    ports:
      - 80:80
      - 443:443
      - 5672:5672 #rabbit
      - 61613:61613 #rabbit
      - 1883:1883 #rabbit
      - 6379:6379 #redis
      - 1414:1414 #ibm-mq
      - 9443:9443 #ibm-mq
      # - 1884:1883 #ibm-mq
      # - 61613:61613 #ibm-mq
      - 8200:8200 #vault
    labels:
      - NAME=nginx_edge_service
    deploy:
     mode: replicated
     replicas: 1
    depends_on:
      - rabbit_service
      - redis_service
      - keycloak_service
      - agent
      - portainer-adm
      - organizr_service
      - ibmmq_service

  rabbit_service:
    image: rabbit_service:latest
    hostname: rabbit_service
    build: 
      context: ./rabbit_service
      dockerfile: Dockerfile
    volumes:
      - rabbit_mq_vol:/var/lib/rabbitmq
    networks:
      - lb-edge
    environment:
      - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCLNMEQG
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
      - RABBITMQ_DEFAULT_VHOST=core
    labels:
      - NAME=rabbit_service
    deploy:
     mode: replicated
     replicas: 1

  redis_service:
    image: redis_service
    hostname: redis_service
    command: redis-server --requirepass Redis2019!
    build: 
      context: ./redis_service
      dockerfile: Dockerfile
    volumes:
      - redis_data_vol:/data
    networks:
      - lb-edge
    labels:
      - NAME=redis_service
    deploy:
     mode: replicated
     replicas: 1

  keycloak_service:
    image: keycloak_service:latest
    hostname: keycloak_service
    build: 
      context: ./keycloak_service
      dockerfile: Dockerfile
    command:
      [
        '-b',
        '0.0.0.0',
        '-Dkeycloak.profile.feature.upload_scripts=enabled',
        '-Dkeycloak.migration.action=import',
        '-Dkeycloak.migration.provider=dir',
        '-Dkeycloak.migration.dir=/opt/jboss/keycloak/realm-config',
        '-Dkeycloak.migration.strategy=IGNORE_EXISTING', #OVERWRITE_EXISTING 
      ]        
    networks:
      - lb-edge      
    labels:
      - NAME=keycloak_service
    environment:
      DB_VENDOR: ORACLE
      DB_ADDR: 223.223.2.140
      DB_PORT: 1521
      DB_DATABASE: DESV12
      DB_USER: TD_KEYCLOAK
      DB_PASSWORD: TD      
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    deploy:
     mode: replicated
     replicas: 1

  agent:
    image: portainer/agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer-adm:
    image: portainer/portainer-ce
    hostname: portainer-adm
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - portainer_data_vol:/data
    networks:
      - agent_network
      - lb-edge
    labels:
      - NAME=portainer-adm
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  organizr_service:
    hostname: organizr_service
    image: organizr/organizr:latest
    restart: always
    user: root
    environment:
      TZ: 'America/Sao_Paulo'
      PGID: 1001
      PUID: 1001
    networks:
      - lb-edge
    labels:
      - NAME=organizr_service      
    volumes:
      - organizr_data_vol:/config   
      
  ibmmq_service:
    image: ibmmq_service
    hostname: ibmmq_service
    build:
      context: ./rabbit_service
      dockerfile: Dockerfile
    networks:
      - lb-edge
    environment:
      - LICENSE=accept
      - MQ_QMGR_NAME=QM.IIB01.DES
      - MQ_ADMIN_PASSWORD=mq_dev123
      - MQSNOAUT=yes
    labels:
      - NAME=ibmmq_service
    deploy:
     mode: replicated
     replicas: 1

  vault_service:
      image: vault_service
      hostname: vault_service
      build:
        context: ./vault_service
        dockerfile: Dockerfile
      networks:
        - lb-edge                  
      volumes:
        - vault_data_vol_file:/vault/file:rw
        - vault_data_vol_config:/vault/config:rw
      cap_add:
        - IPC_LOCK
      entrypoint: vault server -config=/vault/config/vault.json     
      labels:
        - NAME=vault_service
      deploy:
        mode: replicated
        replicas: 1      

volumes:
  rabbit_mq_vol:
    driver: local
  portainer_data_vol:
    driver: local
  redis_data_vol:
    driver: local
  organizr_data_vol:
    driver: local 
  vault_data_vol_file:
    driver: local 
  vault_data_vol_config:
    driver: local            

networks:
  lb-edge:
    driver: overlay
    attachable: true
  agent_network:
    driver: overlay
    attachable: true
