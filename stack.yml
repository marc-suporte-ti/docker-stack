version: '3.4'

services:

  nginx-edge:
    image: nginx-edge
    hostname: nginx-edge
    build: 
      context: ./nginx-edge
      dockerfile: Dockerfile
    networks:
      - lb-edge
    ports:
      - 80:80
      - 443:443
      - 5672:5672 #rabbit
      - 61613:61613 #rabbit
      - 1883:1883 #rabbit
      - 6379:6379 #redis
    restart: always
    deploy:
     mode: replicated
     replicas: 1

  rabbit-service:
    image: redis:alpine
    # image: rabbit-service
    hostname: rabbit-service
    # build: 
    #   context: ./rabbit-service
    #   dockerfile: Dockerfile
    volumes:
      - rabbit_mq_vol:/var/lib/rabbitmq
    networks:
      - lb-edge
    environment:
      - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCLNMEQG
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
      - RABBITMQ_DEFAULT_VHOST=core
    labels:
      - NAME=rabbit-service
    restart: always
    deploy:
     mode: replicated
     replicas: 1

  redis_service:
    image: redis_service
    hostname: redis_service
    command: redis-server --requirepass Redis2019!
    build: 
      context: ./redis_service
      dockerfile: Dockerfile
    volumes:
      - redis_data_vol:/data
    networks:
      - lb-edge
    labels:
      - NAME=redis_service
    restart: always
    deploy:
     mode: replicated
     replicas: 1

  # keycloak_service:
  #   image: keycloak_service
  #   hostname: keycloak_service
  #   build: 
  #     context: ./keycloak_service
  #     dockerfile: Dockerfile
  #   networks:
  #     - lb-edge
  #   environment:
  #     DB_VENDOR: ORACLE
  #     DB_ADDR: 223.223.2.140
  #     DB_PORT: 1521
  #     DB_DATABASE: DESV12
  #     DB_USER: SYSTEM
  #     DB_PASSWORD: oracle
  #     KEYCLOAK_USER: admin
  #     KEYCLOAK_PASSWORD: Pa55w0rd
  #   volumes:
  #     - ./jdbc:/opt/jboss/keycloak/modules/system/layers/base/com/oracle/jdbc/main/driver

  agent:
    image: portainer/agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer-adm:
    image: portainer/portainer-ce
    hostname: portainer-adm
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - portainer_data_vol:/data
    networks:
      - agent_network
      - lb-edge
    labels:
      - NAME=portainer-adm
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

volumes:
  rabbit_mq_vol:
    driver: local
  portainer_data_vol:
    driver: local
  redis_data_vol:
    driver: local

networks:
  lb-edge:
    driver: overlay
    attachable: true
  agent_network:
    driver: overlay
    attachable: true
