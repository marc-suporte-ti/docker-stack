version: '3.4'

services:

  nginx-edge:
    image: nginx-edge
    hostname: nginx-edge
    build: 
      context: ./nginx-edge
      dockerfile: Dockerfile
    networks:
      - lb-edge
    ports:
      - 80:80
    restart: always
    deploy:
     mode: replicated
     replicas: 1

  rabbit-mq:
    image: rabbit-mq
    hostname: rabbit-mq
    build: 
      context: ./rabbit-mq
      dockerfile: Dockerfile
    volumes:
      - rabbit_mq_vol:/var/lib/rabbitmq
    networks:
      - lb-edge
    ports:
      - 15672
      - 5672
      - 61613
      - 1883
    environment:
      - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCLNMEQG
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
      - RABBITMQ_DEFAULT_VHOST=core
    labels:
      - NAME=rabbit-mq
    restart: always
    deploy:
     mode: replicated
     replicas: 1

  agent:
    image: portainer/agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer-adm:
    image: portainer/portainer-ce
    hostname: portainer-adm
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9000:9000"
      - "8000:8000"
    volumes:
      - portainer_data_vol:/data
    networks:
      - agent_network
      - lb-edge
    labels:
      - NAME=portainer-adm
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

volumes:
  rabbit_mq_vol:
    driver: local
  portainer_data_vol:
    driver: local

networks:
  lb-edge:
    driver: overlay
    attachable: true
  agent_network:
    driver: overlay
    attachable: true
